/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>



&mt {
  //  flavor = "tap-preferred";
   // tapping_term_ms = <200>;
};

/ { 

    combos {
        compatible = "zmk,combos";
        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };
        
         combo_tab {
            timeout-ms = <50>;
            key-positions = <10 11>;
            bindings = <&kp TAB>;
        };
        
            combo_ralt {
            timeout-ms = <50>;
            key-positions = <17 16>;
            bindings = <&kp RALT>;
        };
        
                    combo_lalt {
            timeout-ms = <50>;
            key-positions = <11 12>;
            bindings = <&kp LALT>;
        };
        
                           combo_lgui {
            timeout-ms = <50>;
            key-positions = <12 13>;
            bindings = <&kp LGUI>;
        };
        
        
           combo_rgui {
            timeout-ms = <50>;
            key-positions = <17 18>;
            bindings = <&kp RGUI>;
        };
        

        
    };

        keymap {
                compatible = "zmk,keymap";
// --------------------------------------------------------------------------------------------------------------------------------------------- //
//     Q    |    W    |    E    |    R    |    T    |                                          |    Y    |    U    |    I    |    O    |    P    //
//     A    |    S    |    D    |    F    |    G    |                 LAYER0                   |    H    |    J    |    K    |    L    |    ;    //
//     Z    |    X    |    C    |    V    |    B    |                                          |    N    |    M    |    ,    |    .    |    /    //
//                              |   CTRL  |   SHIFT |                                          |  SPACE  |    L2                                 //
// --------------------------------------------------------------------------------------------------------------------------------------------- //                
       		default_layer {
		bindings = <
		&kp Q &kp W &kp E &kp R &kp T 						&kp Y &kp U  &kp I    &kp O   &kp P 
		&kp A &kp S &kp D &kp F &kp G 			        	        &kp H &kp J &kp K &kp L &kp QUOT
		&mt LSFT Z &kp X &kp C &kp V &kp B				        &kp N &kp M  &kp CMMA &kp DOT &mt LSFT RET
          				&mo 1 &kp LCTL  				&kp SPC &to 1
		>;
		};

// --------------------------------------------------------------------------------------------------------------------------------------------- //
//     ESC  |    @    |    #    |    $    |    %    |                                          |    ^    |    &    |    (    |    )    |    BKSP //
//     TAB  |    `    |         |         |    _    |                 LAYER1                   |    '    |    "    |    {    |    }    |    ENTER//
//     ~    |         |         |         |         |                                          |    \    |    =    |    [    |    ]    |    L2   //
//                              |   L1    |   SHIFT |                                          |  ALT    |    L3                                 //
// --------------------------------------------------------------------------------------------------------------------------------------------- //
       		left_layer {
		bindings = <
		&kp TILDE  &kp AT_SIGN  &kp HASH  &kp DOLLAR  &kp PERCENT		&kp CARET &kp AMPERSAND &kp LEFT_PARENTHESIS &kp RIGHT_PARENTHESIS &kp BACKSPACE 
		&kp TAB    &trans    &trans    &trans   &kp UNDERSCORE 		&kp MINUS &kp EQL  &kp LEFT_BRACE &kp RIGHT_BRACE  &kp ENTER 
		&kp ESC    &trans 	&trans &trans  &kp TILDE2 	&kp BACKSLASH &kp EQUAL &kp LEFT_BRACKET &kp RIGHT_BRACKET  &kp SLASH 
					    &to1  &kp LEFT_SHIFT  					&kp LEFT_ALT &to 2 
		>;
		};
// --------------------------------------------------------------------------------------------------------------------------------------------- //
//     ESC  |  MOUSCRL|  MOUSUP | MOUSCRR |         |                                          |   BACK  | PREVTAB | NXTTAB  |  FRWRD  |    BKSP //
//     TAB  |  MOUSLF |  MOUSDN | MOUSRT  |    _    |                 LAYER2                   |   LEFT  |    UP   |  RIGHT  |  DOWN   |    ENTER//
//     ~    |  RT CLK |  MOUSCRU| MOUSCRD |   DEL   |                                          |  RT CLK |         |         |         |    L3   //
//                              |   L1    |   SHIFT |                                          |  ALT    |    L2                                 //
// --------------------------------------------------------------------------------------------------------------------------------------------- //		
		right_layer {
		bindings = <
		&kp BANG  &kp ATSN &kp HASH  &kp DLLR  &kp PRCT    			&kp CRRT  &kp AMPS &kp KMLT &kp LPRN &kp RPRN 
		&kp HASH  &kp QMARK  &kp FSLH  &kp COLN  &kp SCLN 			&kp MINUS &kp KP_EQUAL  &kp LBRC  &kp RBRC   &kp BKSP
		&kp LSFT  &kp KPLS &kp LBKT &kp RBKT   &kp BSLH    			&kp UNDER &kp LEFT &kp DOWN &kp UP  &kp RIGHT
					  &mo 3 &kp LCTL  				&to 1  &to 3 
		>;
		};	
// --------------------------------------------------------------------------------------------------------------------------------------------- //
//     ESC    |    PLAY |    PREV |    NEXT |    T    |                                          |    -    |    7    |    8    |    9    |    P  //
//     TAB    |    CAPS |    VOLDN|    VOLUP|    +    |                LAYER3                    |    =    |    6    |    5    |    4    |    ;  //
//     RESET  |    BRTUP|    BRTDN|    V    |    .    |                                          |    0    |    3    |    2    |    1    |    /  //
//                                |   L1    |   CMD   |                                          |    ALT  |   L2                                //
// --------------------------------------------------------------------------------------------------------------------------------------------- //		
		tri_layer {
		bindings = <
		&kp NUM_1  &kp NUM_2    &kp NUM_3    &kp NUM_4    &kp NUM_5 			&trans &trans   &trans   &trans  &trans
		&kp F1 &kp F2 &kp F3 &kp F4 &kp F5  						&trans &kp PG_UP  &kp K_VOL_UP &kp K_MUTE &trans 
		&bt BT_CLR  &bt BT_NXT &bt BT_PRV &kp F6 &kp F7   				&trans &kp PG_DN  &kp K_VOL_DN  &trans &trans   
					 &trans &trans  					&to 1 &trans 
		>;
		};	
        
	};
};
